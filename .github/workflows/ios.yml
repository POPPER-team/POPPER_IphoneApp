name: iOS workflow

on:
  push:
    #todo change to dev when done
    branches: [ "workflows" ]
  pull_request:
    branches: [ "workflows" ]

jobs:
  build:
    name: Build and Test default scheme using iPhone 13 simulator
    runs-on: macos-latest

    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Boot Simulator
        run: |
          device='iPhone 13'
          xcrun simctl erase "$device"
          xcrun simctl boot "$device"
          
      #todo remove when not needed anymore
      - name: List Simulators and Xcode version
        run: |
          xcrun simctl list devices
          xcodebuild -version
      
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'Device' }}
        run: |
          device='iPhone 13'
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
          
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'Device' }}
        run: |
          device='iPhone 13'
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
